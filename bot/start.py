import os
import logging
import requests
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    Updater,
    CommandHandler,
    MessageHandler,
    Filters,
    CallbackContext,
)
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# URL –≤–∞—à–µ–≥–æ API
All_BOOKS = "http://localhost:8001/api/books/books/all"

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–π—Ç–∏ –∫–Ω–∏–≥—É"
def create_main_menu():
    keyboard = [
        [KeyboardButton("–ù–∞–π—Ç–∏ –∫–Ω–∏–≥—É")],
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# –ö–æ–º–∞–Ω–¥–∞ /start
def start(update: Update, context: CallbackContext) -> None:
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –±–æ—Ç–∞
    update.message.reply_text(
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "1. –ù–∞–π—Ç–∏ –∫–Ω–∏–≥—É - –ø–æ–∏—Å–∫ –∫–Ω–∏–≥ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é.\n"
        "2. /start - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –≤–Ω–∏–∑—É –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞.",
        reply_markup=create_main_menu()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–π—Ç–∏ –∫–Ω–∏–≥—É"
def handle_search_button(update: Update, context: CallbackContext) -> None:
    update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞:")

# –ü–æ–∏—Å–∫ –∫–Ω–∏–≥
def search_books(update: Update, context: CallbackContext) -> None:
    query = update.message.text.lower()  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET-–∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥
        response = requests.get(All_BOOKS)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω
        books = response.json()  # –ü–æ–ª—É—á–∞–µ–º JSON-–æ—Ç–≤–µ—Ç

        # –ò—â–µ–º –∫–Ω–∏–≥–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
        results = []
        for book in books:
            if query in book["title"].lower():
                results.append(
                    f"üìñ <b>{book['title']}</b>\n"
                    f"üë§ –ê–≤—Ç–æ—Ä: {book['author']}\n"
                    f"üìö –ñ–∞–Ω—Ä: {book['genre']}\n"
                    f"üìÖ –î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {book['publication_date']}\n"
                    f"üåê –Ø–∑—ã–∫: {book['language']}\n"
                    f"üìÑ –°—Ç—Ä–∞–Ω–∏—Ü: {book['page_count']}\n"
                    f"‚≠ê –†–µ–π—Ç–∏–Ω–≥: {book['rating']}\n"
                    f"üîó –°—Å—ã–ª–∫–∞: {book['file_url']}\n"
                )

        if results:
            update.message.reply_text("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:\n" + "\n".join(results), parse_mode="HTML")
        else:
            update.message.reply_text("–ö–Ω–∏–≥–∏ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")

    except requests.exceptions.RequestException as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API: {e}")
        update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–∏–≥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
def echo(update: Update, context: CallbackContext) -> None:
    update.message.reply_text(f'–í—ã —Å–∫–∞–∑–∞–ª–∏: {update.message.text}')

def main():
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    token = os.getenv('TOKEN')
    if not token:
        raise ValueError("–ù–µ –∑–∞–¥–∞–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è TOKEN —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ —Ñ–∞–π–ª–µ .env")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º updater —Å —Ç–æ–∫–µ–Ω–æ–º
    updater = Updater(token)

    dp = updater.dispatcher

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    dp.add_handler(CommandHandler("start", start))

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–π—Ç–∏ –∫–Ω–∏–≥—É"
    dp.add_handler(MessageHandler(Filters.regex(r'^–ù–∞–π—Ç–∏ –∫–Ω–∏–≥—É$'), handle_search_button))

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–Ω–∏–≥
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, search_books))

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—ç—Ö–æ)
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, echo))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()